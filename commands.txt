git init

# copy sh github repo address
git remote add origin git@github.com:rnalus2022gh/github-actions-rome.git
git remote -v
    origin  git@github.com:rnalus2022gh/github-actions-test.git (fetch)
    origin  git@github.com:rnalus2022gh/github-actions-test.git (push)

git remote rm origin
rm -rf .git/

git add .
git commit -m " 1st"
git push --set-upstream origin main/master

git push -o merge_request.create origin master
https://dev.to/farnabaz/gitlab-create-merge-requests-from-cli-c36
    
Enabling debug logging
https://docs.github.com/en/enterprise-server@3.1/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging

Merging via command line
Merging via command line
If you do not want to use the merge button or an automatic merge cannot be performed, 
you can perform a manual merge on the command line. 
However, the following steps are not applicable if the base branch is protected.

Step 1: From your project repository, bring in the changes and test.

git fetch origin
git checkout -b dev origin/dev
git merge master
Step 2: Merge the changes and update on GitHub.

git checkout master
git merge --no-ff dev
git push origin master

# Create a new Branch
git checkout -b dev
    Switched to a new branch 'dev'
git add -A
git commit -m "Comments"
git push
    fatal: The current branch dev has no upstream branch.
    To push the current branch and set the remote as upstream, use
git push --set-upstream origin dev